name: deploy-document

on:
  push:
    branches: [main]
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to deploy (e.g., v1.0.0, latest, develop)"
        required: true
        default: "develop"
      alias:
        description: "Version alias (e.g., latest, stable)"
        required: false
        default: ""

permissions:
  contents: write # Required for mike to push to gh-pages branch

jobs:
  deploy-document:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git for deployment
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Define a cache dependency glob
        uses: astral-sh/setup-uv@v5
        with:
          python-version: "3.10"
          cache-dependency-glob: "**/pyproject.toml"

      - name: Install the project
        run: uv sync --only-dev

      - name: Determine version and alias
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
            ALIAS="${{ github.event.inputs.alias }}"
          elif [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            # For version tags (e.g., v1.0.0), use the tag name and set latest alias
            VERSION="${{ github.ref_name }}"
            ALIAS="latest"
          else
            # For main branch pushes (non-tag), deploy as develop
            VERSION="develop"
            ALIAS=""
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "alias=$ALIAS" >> $GITHUB_OUTPUT

      - name: Deploy documentation
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          ALIAS="${{ steps.version.outputs.alias }}"

          if [[ -n "$ALIAS" ]]; then
            echo "Deploying documentation for version: $VERSION with alias: $ALIAS"
            uv run mike deploy --push --update-aliases $VERSION $ALIAS
            uv run mike set-default --push $ALIAS
          else
            echo "Deploying documentation for version: $VERSION (no alias set)"
            uv run mike deploy --push $VERSION
          fi
        env:
          # Ensure GitHub Pages deployment works correctly
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List deployed versions
        run: |
          echo "Currently deployed versions:"
          uv run mike list
          echo "Documentation deployment completed successfully!"
